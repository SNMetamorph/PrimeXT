name: nightly-builds
on: 
  push:
    paths-ignore:
      - 'documentation/**'

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        conf: [Debug]
    env:
      BUILD_TYPE: ${{ matrix.conf }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create build environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -A win32

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE --parallel 8

      - name: Prepare artifacts
        run: |
          mkdir publish\
          mkdir publish\primext
          mkdir publish\primext\bin
          mkdir publish\primext\devkit
          move build\${{env.BUILD_TYPE}}\* publish\
          move game_dir\* publish\primext

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: |
            publish/*

  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        conf: [Debug]
    env:
      BUILD_TYPE: ${{ matrix.conf }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create build environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build
      
      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib cmake
          sudo apt-get install qtbase5-dev:i386

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -DCMAKE_C_FLAGS="-m32" -DCMAKE_CXX_FLAGS="-m32" -DENABLE_PHYSX=OFF

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE --parallel 8
 
      - name: Prepare artifacts
        run: |
          mkdir publish/
          mkdir publish/primext
          mkdir publish/primext/bin
          mkdir publish/primext/devkit
          cp -r build/primext/* publish/primext/
          cp build/primext_run publish/
          cp -r game_dir/* publish/primext

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux
          path: |
            publish/*

  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        conf: [Debug]
    env:
      BUILD_TYPE: ${{ matrix.conf }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'microsoft'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Build
        run: chmod +x ./gradlew && ./gradlew assembleDebug
        working-directory: android

      - name: Prepare artifacts
        run: |
          mkdir publish/
          mkdir publish/primext
          mkdir publish/primext/bin
          mkdir publish/primext/devkit
          cp android/app/build/outputs/apk/debug/app-debug.apk publish/primext-debug.apk
          cp -r game_dir/* publish/primext

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: |
            publish/*

  release:
    name: release-builds
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3.0.1

      - name: Repackage binaries
        run: |
          cd Windows
          zip -r ../PrimeXT-Windows-x86.zip *
          cd ../Linux
          tar -czvf ../PrimeXT-Linux-i386.tar.gz *
          #cd ../Android
          #zip -r ../PrimeXT-Android.zip *

      - name: Remove old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: continious
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload new release
        uses: svenstaro/upload-release-action@2.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: PrimeXT-*
          tag: continious
          prerelease: true
          release_name: PrimeXT Continious Build
